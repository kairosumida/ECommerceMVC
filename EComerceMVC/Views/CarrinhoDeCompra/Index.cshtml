@model EComerceMVC.ViewModel.CarrinhoDeComprasViewModel

<script type="text/javascript">
    $(function () {
        // Document.ready -> link up remove event handler
        $(".RemoveLink").click(function () {
            // Get the id from the link
            var recordToDelete = $(this).attr("data-id");
            if (recordToDelete != '') {
                // Perform the ajax post
                $.post("/CarrinhoDeCompra/RemoveFromCart", {"id": recordToDelete },
                    function (data) {
                        // Successful requests get here
                        // Update the page elements
                        //if (data.ItemCount == 0) {
                            $('#row-' + data.DeleteId).fadeOut('slow');
                        //} else {
                        //    $('#item-count-' + data.DeleteId).text(data.ItemCount);
                        //}
                        $('#cart-total').text(data.CartTotal);
                        $('#update-message').text(data.Message);
                        $('#cart-status').text('Cart (' + data.CartCount + ')');
                    });
            }
        });

    $(".RefreshQuantity").click(function () {
        // Get the id from the link
        var recordToUpdate = $(this).attr("data-id");
        //Set quantity number to 0 if input value is empty
        var countToUpdate = 0;
        if ($("#" + $(this).attr("data-txt-id")).val().trim() !== '') {
            countToUpdate = $("#" + $(this).attr("data-txt-id")).val();
        }
        if (recordToUpdate != '') {
            clearUpdateMessage();
            // Perform the ajax post
            $.post("/CarrinhoDeCompra/UpdateCartCount", { "id": recordToUpdate, "cartCount": countToUpdate },
                function (data) {
                    // Successful requests get here
                    // Update the page elements
                    if (data.ItemCount == 0) {
                        $('#row-' + data.DeleteId).fadeOut('slow');
                    }
                    $('#update-message').text(htmlDecode(data.Message));

                    //Check for not process the callback data when server error occurs
                    if (data.ItemCount != -1) {
                        $('#cart-total').text(data.CartTotal);
                        $('#cart-status').text('Cart (' + data.CartCount + ')');
                    }
                });
        }
        });
    });
    function clearUpdateMessage() {
        // Reset update-message area
        $('#update-message').text('');
    }
    function htmlDecode(value) {
        if (value) {
            return $('<div />').html(value).text();
        }
        else {
            return '';
        }
    }
    if (typeof String.prototype.trim !== 'function') {
        String.prototype.trim = function () {
            return this.replace(/^\s+|\s+$/g, '');
        }
    }
</script>
<div class="create">
    <br />
@*@Html.ValidationSummary(true)*@
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <h3>
        <em>&nbsp Revisão</em> do Carrinho:
    </h3>
    <p class="button">
        &nbsp @Html.ActionLink("Checkout", "ClienteEFormaPagamento", "Checkout", null, htmlAttributes: new { @class = "btn btn-success" })



    </p>
    <div>
        @for (int i = 0; i < Model.CartItems.Count; i++)
        { <p>
        @Html.ValidationMessageFor(model => model.CartItems[i].Quantidade)
    </p>
        }
    </div>
    <div id="update-message">
    </div>
    <table>
        <tr>
            <th>
                &nbsp  Nome do Produto
            </th>
            <th>
                &nbsp Preço (cada)
            </th>
            <th>
                &nbsp Quantidade

            </th>
            <th></th>
            <th></th>
            <th>&nbsp Em estoque</th>
        </tr>
        @{int ix = 0;}

        @foreach (var item in Model.CartItems)
        {

            <tr id="row-@item.RecordId">

                <td>&nbsp
                    @Html.ActionLink(item.Produto.Nome,
"Details", "Produto", new { id = item.ProdutoId }, null)
                </td>
                <td>
                    &nbsp  @item.Produto.Preco
                </td>
                <td align="right">
                    @*id="item-count-@item.RecordId">
                        @item.Count*@
                    <div class="col-md-2">
                        @Html.TextBoxFor(model => model.CartItems[ix].Quantidade, new { style = "width:30px; text-align:right;", onkeyup = "clearUpdateMessage();", onchange = "clearUpdateMessage();" })
                    </div>
                </td>
                <td>
                    <a href="#" class="RefreshQuantity" data-id="@item.RecordId" data-txt-id="CartItems_@(ix)__Quantidade"><span class="glyphicon glyphicon-repeat" aria-hidden="true"></span></a>&nbsp;|&nbsp;
                    <a href="#" class="RemoveLink" data-id="@item.RecordId"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span></a>&nbsp;
                </td>
                <td></td>
                <td></td>

            </tr>
            ix++;
        }
        <tr>
            <td>
                &nbsp Total (R$)
            </td>
            <td></td>

            <td id="cart-total">
                &nbsp  @Model.CartTotal
            </td>
        </tr>

    </table>
            }

    </div>